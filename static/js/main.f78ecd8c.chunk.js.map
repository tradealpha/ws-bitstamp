{"version":3,"sources":["visualization/chart.tsx","visualization/utils.tsx","visualization/table.tsx","lib/digital-filter.ts","visualization/bitstamp.tsx","lib/moving-average.ts","visualization/index.tsx","index.tsx"],"names":["lineChartOptions","maintainAspectRatio","tooltips","enabled","scales","xAxes","ticks","autoSkip","maxTicksLimit","props","data","data2","labels","chartLabel","d","datasets","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","lineData","options","colors","channels","map","x","initUnit","value","growth","colorIdx","values","init","Array","fill","_row","length","Badge","text","isPrimary","className","onClick","Badges","channelSelected","channel","i","key","v","Table","Util","c","row","cell","j","style","transition","Utils","number","formatNumber","SMA","n","a","b","filter","N","M","Mx","y","k","ws","WebSocket","onopen","forEach","send","JSON","stringify","event","prepareDataWMA","nMa","cutoffIdx","e","l","first","prepareData","preMa","DigitalFilter","MovingAverage","slice","ma","console","log","useState","setData","selectedChannel","setChannel","onmessage","parse","price","indexOf","Math","sign","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78ecd8c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\n\nconst lineData = (\n  chartLabel: string,\n  data: number[],\n  data2: number[],\n  labels: string[] = []\n): { labels?: string[]; datasets: any } => ({\n  labels,\n  datasets: [\n    {\n      label: chartLabel,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data,\n    },\n    {\n      label: chartLabel + \"ema\",\n      lineTension: 0.1,\n      //backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,150,152,1)\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: data2, //.map((_) => _ * 1.1),\n    },\n  ],\n});\n\nconst lineChartOptions = {\n  //responsive: true,\n  maintainAspectRatio: false,\n  tooltips: {\n    enabled: true,\n  },\n  scales: {\n    xAxes: [\n      {\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10,\n        },\n      },\n    ],\n  },\n};\n\nexport default (props: {\n  chartLabel?: string;\n  data: number[];\n  data2: number[];\n  labels: string[];\n}) => {\n  const { data, data2, labels, chartLabel = \"\" } = props;\n  const d = lineData(chartLabel, data, data2, labels);\n  return <Line data={d} options={lineChartOptions} />;\n};\n","import React from \"react\";\nimport * as T from \"./type\";\n\nexport const colors = [\n  \"#838B8B\",\n  \"#7A8B8B\",\n  \"#C1CDCD\",\n  \"#668B8B\",\n  \"#B4CDCD\",\n  \"#2F4F4F\",\n  \"#2F4F4F\",\n  \"#5F9F9F\",\n  \"#C0D9D9\",\n  \"#528B8B\",\n  \"#E0EEEE\",\n  \"#96CDCD\",\n  \"#388E8E\",\n  \"#79CDCD\",\n  \"#D1EEEE\",\n  \"#8FD8D8\",\n  \"#66CCCC\",\n  \"#ADEAEA\",\n];\n\nexport const channels: string[] = [\n  \"btcusd\",\n  \"xrpusd\",\n  \"ltcusd\",\n  \"ethusd\",\n  \"bchusd\",\n].map((x) => \"live_trades_\" + x);\n\nconst initUnit = {\n  value: 0,\n  growth: 0,\n  colorIdx: 0,\n  values: [],\n};\n\nexport const init: T.V[][] = new Array(1).fill(0).map((_row) => {\n  const d: T.V[] = new Array(channels.length).fill(initUnit);\n\n  return d;\n});\n\nconst Badge = (props: {\n  text: string;\n  isPrimary?: boolean;\n  onClick: (channel: string) => void;\n}) => {\n  const { text, isPrimary = false } = props;\n  const color = isPrimary ? \"primary\" : \"secondary\";\n  const className = \"badge badge-pill badge-\" + color;\n  return (\n    <span onClick={() => props.onClick(text)} className={className}>\n      {text}\n    </span>\n  );\n};\n\nexport const Badges = (props: {\n  channelSelected?: string;\n  onClick: (channel: string) => void;\n}) => {\n  const { channelSelected = \"live_trades_btcusd\" } = props;\n\n  return (\n    <>\n      {channels.map((channel, i) => {\n        return (\n          <Badge\n            key={i}\n            onClick={(v) => props.onClick(v)}\n            text={channel}\n            isPrimary={channelSelected === channel}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import React from \"react\";\n\nimport Utils from \"@nexys/utils\";\nimport * as T from \"./type\";\nimport * as Util from \"./utils\";\n\nconst Table = (props: { data: T.V[][] }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {Util.channels.map((c) => (\n            <th key={c}>{c}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {props.data.map((row, i) => (\n          <tr key={i}>\n            {row.map((cell, j) => (\n              <td\n                key={j}\n                style={{\n                  backgroundColor: Util.colors[cell.colorIdx],\n                  transition: \"background-color .4s\",\n                }}\n              >\n                {cell.value} ({Utils.number.formatNumber(cell.growth)})\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","/*#####\n  #\n  # SMA: Simple Moving Average\n  # @param N: number of days\n  #*/\nexport const SMA = (n: number): { a: number[]; b: number[] } => {\n  const a: number[] = [1.0];\n  const b: number[] = new Array(n).fill(1).map((x) => x / n);\n\n  return { a, b };\n};\n\n/*\n  #####\n  #\n  # EWMA: Exponentially Weighted Moving Average\n  # @param lambda: energy/half-life parameter (see p.20-25, not sure)\n  #*/\nexport const EWMA = (lambda: number) => {\n  const b: number[] = [1.0 * (1 - lambda)];\n  const a: number[] = [1, -lambda];\n\n  return { a, b };\n};\n\n/*#####\n  #\n  # EWMA: Exponentially Weighted Moving Average\n  # @param N: number of days (p.25)\n  #  */\nexport const EWMAday = (n: number): { a: number[]; b: number[] } => {\n  const lambda = (n - 1) / (n + 1);\n  return EWMA(lambda);\n};\n\n/*\"\"\"\n    a_0y[n] + a_1y[n-1] + ... a_Ny[n-N] = b_0x[n] + b_1x[n-1] + ... + b_Mx[n-M]\n    see p.12 master thesis\n\n    usage: filter(a._2, a._1, p)\n  \"\"\"*/\nexport const filter = (\n  { b, a }: { b: number[]; a: number[] },\n  x: number[]\n): number[] => {\n  //get lengths of vector, to avoid wasting time calculating them every new iteration\n  const N = a.length;\n  const M = b.length;\n  const Mx = x.length;\n\n  const y = new Array(Mx).fill(0);\n\n  let k: number = 0;\n  for (k = 0; k < Mx; k++) {\n    y[k] = 0;\n\n    // moving average part (MA)\n    let i = 0;\n    for (i = 0; i < M; i++) {\n      if (k - i + 1 > 0 && k - i + 1 <= Mx) {\n        y[k] = b[i] * x[k - i] + y[k];\n      }\n    }\n\n    // auto regressive part (AR)\n    for (i = 1; i < N; i++) {\n      if (k - i + 1 > 0) {\n        y[k] = -a[i] * y[k - i] + y[k];\n      }\n    }\n  }\n  return y;\n};\n","import React, { useState } from \"react\";\n\nimport Chart from \"./chart\";\nimport Table from \"./table\";\nimport * as Util from \"./utils\";\nimport * as MovingAverage from \"../lib/moving-average\";\n\nconst host = \"wss://ws.bitstamp.net\";\n\nconst ws: WebSocket = new WebSocket(host);\n\nws.onopen = () => {\n  Util.channels.forEach((channel) => {\n    ws.send(\n      JSON.stringify({\n        event: \"bts:subscribe\",\n        data: {\n          channel,\n        },\n      })\n    );\n  });\n};\n\nconst prepareData = (d: number[], cutoffIdx: number) => {\n  const l = d.length;\n\n  if (l < cutoffIdx) {\n    const first = d[0];\n    const a = new Array(cutoffIdx - l).fill(first);\n    return a;\n  }\n\n  return d;\n};\n\nconst prepareDataWMA = (d: number[], nMa: number, cutoffIdx: number) => {\n  const e = prepareData(d, cutoffIdx);\n  const preMa = MovingAverage.simple(e, nMa);\n\n  const data = e.slice(nMa);\n  const ma = preMa.slice(nMa);\n\n  console.log({ data, ma });\n\n  return { data, ma };\n};\n\nexport default () => {\n  const [d, setData] = useState(Util.init);\n  const [selectedChannel, setChannel] = useState<string>(\"live_trades_btcusd\");\n\n  ws.onmessage = (event) => {\n    const a: { data: { price: number }; channel: string } = JSON.parse(\n      event.data\n    );\n\n    if (a.data && a.data.price) {\n      const i: number = Util.channels.indexOf(a.channel);\n      const v = d[0][i];\n      const value = a.data.price;\n      const growth = (100 * (value - v.value)) / v.value;\n      const colorIdx = Math.sign(growth) + 1;\n      const values: number[] = [...d[0][i].values, value];\n\n      d[0][i] = { value, growth, colorIdx, values };\n      setData([...d]);\n    }\n  };\n\n  const i: number = Util.channels.indexOf(selectedChannel);\n  const cutoffIdx = 10;\n  const { data, ma } = prepareDataWMA(d[0][i].values, cutoffIdx, 15);\n\n  return (\n    <>\n      <h3>Table</h3>\n      <Table data={d} />\n      <h3>Chart</h3>\n      <Util.Badges\n        onClick={(c) => setChannel(c)}\n        channelSelected={selectedChannel}\n      />\n      <Chart\n        chartLabel={selectedChannel}\n        data={data}\n        data2={ma}\n        labels={data.map((_, i) => \"\" + i)}\n      />\n    </>\n  );\n};\n","import * as DigitalFilter from \"./digital-filter\";\n\nexport const simple = (x: number[], n: number = 10): number[] => {\n  const { a, b } = DigitalFilter.SMA(n);\n  return DigitalFilter.filter({ b, a }, x);\n};\n\nexport const exp = (x: number[], nDay: number = 10): number[] => {\n  const { a, b } = DigitalFilter.EWMAday(nDay);\n  return DigitalFilter.filter({ b, a }, x);\n};\n","import React from \"react\";\nimport Bitstamp from \"./bitstamp\";\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <Bitstamp />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Visualization from \"./visualization\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Visualization />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}